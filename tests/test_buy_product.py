import pytest

from pages.client_information_page import Client_Information_Page
from pages.main_page import Main_Page


testdata = [
            (2, 1, '–ö—Ä—É–∂–∫–∏ ‚òï'),
            (4, 2, '–°—Ç–∏–∫–µ—Ä—ã 3D'),
            (9, 3, '–°–≤–∏—Ç—à–æ—Ç—ã üß•')
            ]


@pytest.mark.parametrize("n_filter, n_elem, expected", testdata)
def test_buy_product(n_filter, n_elem, expected, set_up):
    """–¢–µ—Å—Ç –ø–æ –ø–æ–∫—É–ø–∫–µ —Ç–æ–≤–∞—Ä–∞ –≤–∫–ª—é—á–∞–µ—Ç:
    - 1. –≤—ã–±–æ—Ä —Ñ–∏–ª—å—Ç—Ä–∞ –¥–ª—è —Ç–æ–≤–∞—Ä–∞
    - 2. –ü–æ–∫—É–ø–∫–∞ —Ç–æ–≤–∞—Ä–∞
    - 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–≤–∞—Ä–∞ –ø–æ —Ñ–∏–ª—å—Ç—Ä—É
    - 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–Ω—ã –∏ –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞
    - 5. –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ"""

    driver = set_up   # —Å–º–æ—Ç—Ä–µ—Ç—å conftest

    mp = Main_Page(driver, n_filter, n_elem, expected)
    mp.select_filter()

    mp.select_products()
    main_info_product = mp.text_value_and_price_product()

    clp = Client_Information_Page(driver)
    client_cart_info_product = clp.text_value_and_price_product()

    assert main_info_product == client_cart_info_product
    print("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–µ –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –≤ –∫–æ—Ä–∑–∏–Ω–µ")

    clp.input_information()
